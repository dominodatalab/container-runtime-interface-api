version: 2.1

orbs:
  cri-api:
    executors:
      python_3_9:
        docker:
          - image: cimg/python:3.9
      python_3_8:
        docker:
          - image: cimg/python:3.8
      python_3_7:
        docker:
          - image: cimg/python:3.7
    jobs:
      lint:
        parameters:
          python-version:
            type: string
        executor: python_<< parameters.python-version >>
        steps:
          - checkout
          - run:
              name: Install pip dependencies
              command: pipenv install --dev --deploy --python=$(which python)
          - run:
              name: Ensure code is correctly formatted
              command: pipenv run black --check .

      unit-tests:
        parameters:
          python-version:
            type: string
        executor: python_<< parameters.python-version >>
        steps:
          - checkout
          - run:
              name: Install pip dependencies
              command: pipenv install --dev --deploy --python=$(which python)
          - run:
              name: Run unit tests
              command: pipenv run pytest --junitxml=./tests/reports/junit-test-report.xml
          - store_test_results:
              path: tests/reports
      publish:
        parameters:
          python-version:
            type: string
        executor: python_<< parameters.python-version >>
        steps:
          - checkout
          - run:
              name: Install pip dependencies
              command: pipenv install --dev --deploy --python=$(which python)
          - run:
              name: Create distributions
              command: |
                pipenv run python setup.py sdist
                pipenv run python setup.py bdist_wheel
          - run:
              name: Publish distributions
              command: |
                pipenv run twine upload dist/*
      integration-tests:
        machine:
          image: ubuntu-2004:202107-02
        environment:
          K8S_VERSION: v1.22.0
          MINIKUBE_VERSION: v1.22.0
          CHANGE_MINIKUBE_NONE_USER: true
          MINIKUBE_WANTREPORTERRORPROMPT: false
          MINIKUBE_WANTUPDATENOTIFICATION: false
          RUNTIME_SOCK: unix:/var/run/dockershim.sock
        steps:
          - checkout
          - run:
              name: Install pip dependencies
              command: |
                pip3 install pipenv
                pipenv install --dev --deploy --python=$(which python3)
          - run:
              name: Setup system prereqs
              command: |
                sudo apt-get update
                sudo apt-get install -y conntrack
          - run:
              name: System info
              command: |
                uname -a
                cat /etc/os-release
                lscpu
                free -mt
          - run:
              name: Install minikube
              command: |
                curl -sSfLo minikube https://storage.googleapis.com/minikube/releases/${MINIKUBE_VERSION}/minikube-linux-amd64
                chmod +x minikube
                sudo mv minikube /usr/local/bin/
          - run:
              name: Launch minikube
              command: |
                sudo -E minikube start \
                  --vm-driver=none \
                  --kubernetes-version=${K8S_VERSION} \
                  --wait=true

                # Allow `circleci` user access
                sudo -E chmod 777 "${RUNTIME_SOCK/unix:/}"
          - run:
              name: Run tests
              command: pipenv run pytest --junitxml=./tests/reports/junit-test-report.xml
          - store_test_results:
              path: tests/reports

workflows:
  unit-build-publish:
    jobs:
      - cri-api/unit-tests:
          matrix:
            parameters:
              python-version: ["3_7", "3_8", "3_9"]
          filters:
            tags:
              only: /.*/
      - cri-api/lint:
          python-version: &default_python "3_8"
          filters:
            tags:
              only: /.*/
          requires:
            - cri-api/unit-tests
      - cri-api/integration-tests:
          filters:
            tags:
              only: /.*/
          requires:
            - cri-api/lint
      - cri-api/publish:
          python-version: *default_python
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
          requires:
            - cri-api/integration-tests
