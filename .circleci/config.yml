version: 2.1

orbs:
  cri-api:
    executors:
      python-3.8:
        docker:
          - image: circleci/python:3.8
      python-3.7:
        docker:
          - image: circleci/python:3.8
      python-3.6:
        docker:
          - image: circleci/python:3.8
    jobs:
      unit-tests:
        executor: python-<< parameters.python-version >>
        steps:
          - checkout
          - restore_cache:
              key: &cache_key v1-pipfile-{{ checksum "Pipfile.lock" }}
          - run:
              name: Install pip dependencies
              command: pipenv install --dev --deploy
          - save_cache:
              key: *cache_key
              paths:
                - ".venv"
          - run:
              name: "Run unit tests"
              command: pipenv run pytest --junitxml=./tests/reports/junit-test-report.xml
          - run:
              name: "Ensure code is correctly formatted"
              command: pipenv run black --check .
          - store_test_results:
              path: tests/reports
      publish:
        executor: python-3.8
        steps:
          - checkout
          - restore_cache:
              key: *cache_key
          - run:
              name: Install pip dependencies
              command: pipenv install --dev --deploy
          - run:
              name: Create distributions
              command: |
                pipenv run python setup.py sdist
                pipenv run python setup.py bdist_wheel
          - run:
              name: Publish distributions
              command: |
                pipenv run twine upload dist/*

workflows:
  unit-build-publish:
    jobs:
      - cri-api/unit-tests:
          matrix:
            parameters:
              python-version: ["3.6", "3.7", "3.8"]
          filters:
            tags:
              only: /.*/
      - cri-api/publish:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
          requires:
            - cri-api/unit-tests
